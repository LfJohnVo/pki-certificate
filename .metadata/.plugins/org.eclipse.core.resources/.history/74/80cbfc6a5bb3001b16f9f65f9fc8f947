package com.udemy.pki.core;

import java.io.FileInputStream;
import java.io.InputStream;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.cert.Certificate;
import java.security.cert.X509Certificate;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.List;

import com.udemy.pki.bean.CertificadoUdemy;

public class CertificateStore {
	//codigo para extraer información de JKS
	public static CertificadoUdemy getCertificateFromFile(String path, String key) {
		
		CertificadoUdemy certificado = new CertificadoUdemy();
		try {
			//Abro archivo de keystore
			KeyStore jks = KeyStore.getInstance("PKCS12");
			InputStream in = new FileInputStream(path);
			//extraigo el contenido y lo pongo en un array
			jks.load(in, key.toCharArray());
			in.close();
			//paso a una variable el contenido de aliases
			String aliasJks = jks.aliases().nextElement();
			//extrae llave privada
			PrivateKey pk = (PrivateKey) jks.getKey(aliasJks, key.toCharArray());
			//Se crea certificado para poder almacenar cadena de certificación
			Certificate[] chain = jks.getCertificateChain(aliasJks);
			//Obtener certificado principal (publico)
			X509Certificate oPublicCertificate = (X509Certificate) chain[0];
			//almacena toda la informacion que estamos procesando para usarlo en otro proceso
			certificado.setAlias(oPublicCertificate.getSubjectDN().getName());
			
		}catch (Exception e) {
			e.printStackTrace();
		}//catch
		
		return certificado;
		
	}//termina metodo
	
}//termina class
